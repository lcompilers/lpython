(Module
    [(Expr
        (Call
            (Call
                (Call
                    (Name
                        getattr
                        Load
                    )
                    [(Name
                        x
                        Load
                    )
                    (Name
                        y
                        Load
                    )]
                    []
                )
                [(Name
                    a
                    Load
                )
                (Name
                    b
                    Load
                )]
                []
            )
            [(ConstantInt
                5
                ()
            )]
            [(a
            (Name
                a
                Load
            ))
            (b
            (ConstantInt
                0
                ()
            ))]
        )
    )
    (Expr
        (Call
            (Call
                (Name
                    func
                    Load
                )
                [(Name
                    a
                    Load
                )
                (Name
                    _op
                    Load
                )]
                []
            )
            [(Name
                s
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Call
                (Name
                    test
                    Load
                )
                []
                []
            )
            []
            []
        )
    )
    (Assign
        [(Name
            a
            Store
        )]
        (Subscript
            (List
                [(ConstantInt
                    1
                    ()
                )
                (ConstantInt
                    2
                    ()
                )]
                Load
            )
            (ConstantInt
                0
                ()
            )
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                a
                Store
            )
            (Name
                b
                Store
            )]
            Store
        )]
        (Subscript
            (BinOp
                (List
                    [(ConstantInt
                        1
                        ()
                    )
                    (ConstantInt
                        2
                        ()
                    )]
                    Load
                )
                Add
                (List
                    [(ConstantInt
                        0
                        ()
                    )
                    (ConstantInt
                        0
                        ()
                    )]
                    Load
                )
            )
            (Slice
                ()
                (ConstantInt
                    2
                    ()
                )
                ()
            )
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                a
                Store
            )
            (Name
                b
                Store
            )]
            Store
        )]
        (Subscript
            (BinOp
                (Call
                    (Attribute
                        (Name
                            c
                            Load
                        )
                        d
                        Load
                    )
                    []
                    []
                )
                Add
                (List
                    [(ConstantInt
                        1
                        ()
                    )
                    (ConstantInt
                        0
                        ()
                    )]
                    Load
                )
            )
            (Slice
                ()
                ()
                ()
            )
            Load
        )
        ()
    )
    (Expr
        (Subscript
            (Dict
                [(ConstantStr
                    "a"
                    ()
                )
                (ConstantStr
                    "b"
                    ()
                )]
                [(Name
                    a
                    Load
                )
                (Name
                    b
                    Load
                )]
            )
            (Name
                val
                Load
            )
            Load
        )
    )
    (If
        (Compare
            (Subscript
                (Subscript
                    (Name
                        args
                        Load
                    )
                    (Name
                        i
                        Load
                    )
                    Load
                )
                (Slice
                    ()
                    (ConstantInt
                        1
                        ()
                    )
                    ()
                )
                Load
            )
            In
            [(List
                [(ConstantStr
                    ""
                    ()
                )
                (ConstantStr
                    "."
                    ()
                )]
                Load
            )]
        )
        [(Pass)]
        []
    )
    (Assign
        [(Name
            x
            Store
        )]
        (List
            [(Subscript
                (ListComp
                    (BinOp
                        (UnaryOp
                            USub
                            (Name
                                c
                                Load
                            )
                        )
                        Mod
                        (Name
                            self
                            Load
                        )
                    )
                    [((Name
                        c
                        Store
                    )
                    (Call
                        (Name
                            reversed
                            Load
                        )
                        [(Attribute
                            (Attribute
                                (Name
                                    T
                                    Load
                                )
                                rep
                                Load
                            )
                            rep
                            Load
                        )]
                        []
                    )
                    []
                    0)]
                )
                (Slice
                    ()
                    (UnaryOp
                        USub
                        (ConstantInt
                            1
                            ()
                        )
                    )
                    ()
                )
                Load
            )]
            Load
        )
        ()
    )
    (Expr
        (Subscript
            (ListComp
                (Name
                    x
                    Load
                )
                [((Name
                    x
                    Store
                )
                (Name
                    G
                    Load
                )
                [(Call
                    (Attribute
                        (Attribute
                            (Name
                                self
                                Load
                            )
                            ring
                            Load
                        )
                        is_unit
                        Load
                    )
                    [(Subscript
                        (Name
                            x
                            Load
                        )
                        (ConstantInt
                            0
                            ()
                        )
                        Load
                    )]
                    []
                )]
                0)]
            )
            (ConstantInt
                0
                ()
            )
            Load
        )
    )
    (If
        (Compare
            (Name
                x
                Load
            )
            NotIn
            [(Name
                z
                Load
            )]
        )
        [(Expr
            (ConstantEllipsis
                ()
            )
        )]
        []
    )
    (If
        (Compare
            (Name
                x
                Load
            )
            NotIn
            [(Name
                z
                Load
            )]
        )
        [(Expr
            (ConstantEllipsis
                ()
            )
        )]
        []
    )
    (If
        (Compare
            (Name
                x
                Load
            )
            NotIn
            [(Name
                z
                Load
            )]
        )
        [(Expr
            (ConstantEllipsis
                ()
            )
        )]
        []
    )
    (If
        (Compare
            (Name
                x
                Load
            )
            NotIn
            [(Name
                z
                Load
            )]
        )
        [(Expr
            (ConstantEllipsis
                ()
            )
        )]
        []
    )
    (FunctionDef
        imatmul
        ([]
        [(a
        ()
        ())
        (b
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Expr
            (ConstantStr
                "Same as a @= b."
                ()
            )
        )
        (AugAssign
            (Name
                a
                Store
            )
            MatMult
            (Name
                b
                Load
            )
        )
        (Return
            (Name
                a
                Load
            )
        )]
        []
        ()
        ()
    )]
    []
)
