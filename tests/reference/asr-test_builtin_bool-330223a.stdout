(TranslationUnit (SymbolTable 1 {_lpython_main_program: (Subroutine (SymbolTable 100 {}) _lpython_main_program [] [(SubroutineCall 1 test_bool () [] ())] Source Public Implementation () .false. .false.), bool@__lpython_overloaded_0__bool: (ExternalSymbol 1 bool@__lpython_overloaded_0__bool 4 __lpython_overloaded_0__bool lpython_builtin [] __lpython_overloaded_0__bool Public), bool@__lpython_overloaded_1__bool: (ExternalSymbol 1 bool@__lpython_overloaded_1__bool 4 __lpython_overloaded_1__bool lpython_builtin [] __lpython_overloaded_1__bool Public), bool@__lpython_overloaded_2__bool: (ExternalSymbol 1 bool@__lpython_overloaded_2__bool 4 __lpython_overloaded_2__bool lpython_builtin [] __lpython_overloaded_2__bool Public), bool@__lpython_overloaded_3__bool: (ExternalSymbol 1 bool@__lpython_overloaded_3__bool 4 __lpython_overloaded_3__bool lpython_builtin [] __lpython_overloaded_3__bool Public), bool@__lpython_overloaded_4__bool: (ExternalSymbol 1 bool@__lpython_overloaded_4__bool 4 __lpython_overloaded_4__bool lpython_builtin [] __lpython_overloaded_4__bool Public), bool@__lpython_overloaded_5__bool: (ExternalSymbol 1 bool@__lpython_overloaded_5__bool 4 __lpython_overloaded_5__bool lpython_builtin [] __lpython_overloaded_5__bool Public), bool@__lpython_overloaded_6__bool: (ExternalSymbol 1 bool@__lpython_overloaded_6__bool 4 __lpython_overloaded_6__bool lpython_builtin [] __lpython_overloaded_6__bool Public), bool@__lpython_overloaded_7__bool: (ExternalSymbol 1 bool@__lpython_overloaded_7__bool 4 __lpython_overloaded_7__bool lpython_builtin [] __lpython_overloaded_7__bool Public), bool@__lpython_overloaded_8__bool: (ExternalSymbol 1 bool@__lpython_overloaded_8__bool 4 __lpython_overloaded_8__bool lpython_builtin [] __lpython_overloaded_8__bool Public), bool@__lpython_overloaded_9__bool: (ExternalSymbol 1 bool@__lpython_overloaded_9__bool 4 __lpython_overloaded_9__bool lpython_builtin [] __lpython_overloaded_9__bool Public), complex@__lpython_overloaded_13__complex: (ExternalSymbol 1 complex@__lpython_overloaded_13__complex 4 __lpython_overloaded_13__complex lpython_builtin [] __lpython_overloaded_13__complex Public), complex@__lpython_overloaded_9__complex: (ExternalSymbol 1 complex@__lpython_overloaded_9__complex 4 __lpython_overloaded_9__complex lpython_builtin [] __lpython_overloaded_9__complex Public), lpython_builtin: (IntrinsicModule lpython_builtin), main_program: (Program (SymbolTable 99 {}) main_program [] [(SubroutineCall 1 _lpython_main_program () [] ())]), test_bool: (Subroutine (SymbolTable 2 {a: (Variable 2 a Local () () Default (Integer 4 []) Source Public Required .false.), a2: (Variable 2 a2 Local () () Default (Integer 8 []) Source Public Required .false.), a3: (Variable 2 a3 Local () () Default (Integer 1 []) Source Public Required .false.), a4: (Variable 2 a4 Local () () Default (Integer 2 []) Source Public Required .false.), b: (Variable 2 b Local () () Default (Logical 4 []) Source Public Required .false.), bool: (ExternalSymbol 2 bool 4 bool lpython_builtin [] bool Private), c: (Variable 2 c Local () () Default (Complex 4 []) Source Public Required .false.), c1: (Variable 2 c1 Local () () Default (Complex 8 []) Source Public Required .false.), complex: (ExternalSymbol 2 complex 4 complex lpython_builtin [] complex Private), f: (Variable 2 f Local () () Default (Real 8 []) Source Public Required .false.), f2: (Variable 2 f2 Local () () Default (Real 4 []) Source Public Required .false.), s: (Variable 2 s Local () () Default (Character 1 -2 () []) Source Public Required .false.)}) test_bool [] [(= (Var 2 a) (IntegerConstant 34 (Integer 4 [])) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_0__bool 2 bool [((Var 2 a))] (Logical 4 []) () ()) ()) (= (Var 2 a) (IntegerConstant 0 (Integer 4 [])) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_0__bool 2 bool [((Var 2 a))] (Logical 4 []) () ()) (Logical 4 []) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_0__bool 2 bool [((IntegerUnaryMinus (IntegerConstant 1 (Integer 4 [])) (Integer 4 []) (IntegerConstant -1 (Integer 4 []))))] (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_0__bool 2 bool [((IntegerConstant 0 (Integer 4 [])))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (= (Var 2 a2) (Cast (IntegerConstant 34 (Integer 4 [])) IntegerToInteger (Integer 8 []) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_1__bool 2 bool [((Var 2 a2))] (Logical 4 []) () ()) ()) (= (Var 2 a3) (Cast (IntegerConstant 34 (Integer 4 [])) IntegerToInteger (Integer 1 []) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_2__bool 2 bool [((Var 2 a3))] (Logical 4 []) () ()) ()) (= (Var 2 a4) (Cast (IntegerUnaryMinus (IntegerConstant 1 (Integer 4 [])) (Integer 4 []) (IntegerConstant -1 (Integer 4 []))) IntegerToInteger (Integer 2 []) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_3__bool 2 bool [((Var 2 a4))] (Logical 4 []) () ()) ()) (= (Var 2 f) (RealConstant   0.00000000000000000e+00 (Real 8 [])) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_5__bool 2 bool [((Var 2 f))] (Logical 4 []) () ()) (Logical 4 []) ()) ()) (= (Var 2 f) (RealConstant   1.00000000000000000e+00 (Real 8 [])) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_5__bool 2 bool [((Var 2 f))] (Logical 4 []) () ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_5__bool 2 bool [((RealConstant   5.67868658000000011e+01 (Real 8 [])))] (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_5__bool 2 bool [((RealConstant   0.00000000000000000e+00 (Real 8 [])))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (= (Var 2 f2) (Cast (RealUnaryMinus (RealConstant   2.35599999999999994e+02 (Real 8 [])) (Real 8 []) (RealConstant  -2.35599999999999994e+02 (Real 8 []))) RealToReal (Real 4 []) (RealConstant  -2.35599999999999994e+02 (Real 4 []))) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_4__bool 2 bool [((Var 2 f2))] (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "" (Character 1 0 () [])) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_6__bool 2 bool [((Var 2 s))] (Logical 4 []) () ()) (Logical 4 []) ()) ()) (= (Var 2 s) (StringConstant "str" (Character 1 3 () [])) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_6__bool 2 bool [((Var 2 s))] (Logical 4 []) () ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_6__bool 2 bool [((StringConstant "" (Character 1 0 () [])))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_6__bool 2 bool [((StringConstant "str" (Character 1 3 () [])))] (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (= (Var 2 b) (LogicalConstant .true. (Logical 4 [])) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_7__bool 2 bool [((Var 2 b))] (Logical 4 []) () ()) ()) (= (Var 2 b) (LogicalConstant .false. (Logical 4 [])) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_7__bool 2 bool [((Var 2 b))] (Logical 4 []) () ()) (Logical 4 []) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_7__bool 2 bool [((LogicalConstant .true. (Logical 4 [])))] (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_7__bool 2 bool [((LogicalConstant .false. (Logical 4 [])))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (= (Var 2 c) (Cast (FunctionCall 1 complex@__lpython_overloaded_9__complex 2 complex [((IntegerConstant 2 (Integer 4 []))) ((IntegerConstant 3 (Integer 4 [])))] (Complex 8 []) (ComplexConstant   2.00000000000000000e+00   3.00000000000000000e+00 (Complex 8 [])) ()) ComplexToComplex (Complex 4 []) (ComplexConstant   2.00000000000000000e+00   3.00000000000000000e+00 (Complex 4 []))) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_8__bool 2 bool [((Var 2 c))] (Logical 4 []) () ()) ()) (= (Var 2 c) (Cast (FunctionCall 1 complex@__lpython_overloaded_9__complex 2 complex [((IntegerConstant 0 (Integer 4 []))) ((IntegerConstant 0 (Integer 4 [])))] (Complex 8 []) (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 [])) ()) ComplexToComplex (Complex 4 []) (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 4 []))) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_8__bool 2 bool [((Var 2 c))] (Logical 4 []) () ()) (Logical 4 []) ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_9__bool 2 bool [((ComplexBinOp (Cast (IntegerConstant 0 (Integer 4 [])) IntegerToComplex (Complex 8 []) (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 []))) Add (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 [])) (Complex 8 []) (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 []))))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (= (Var 2 c1) (FunctionCall 1 complex@__lpython_overloaded_13__complex 2 complex [((IntegerConstant 0 (Integer 4 []))) ((RealConstant   1.00201999999999999e-01 (Real 8 [])))] (Complex 8 []) (ComplexConstant   0.00000000000000000e+00   1.00201999999999999e-01 (Complex 8 [])) ()) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_9__bool 2 bool [((Var 2 c1))] (Logical 4 []) () ()) ()) (Assert (LogicalNot (FunctionCall 1 bool@__lpython_overloaded_9__bool 2 bool [((FunctionCall 1 complex@__lpython_overloaded_9__complex 2 complex [((IntegerConstant 0 (Integer 4 []))) ((IntegerConstant 0 (Integer 4 [])))] (Complex 8 []) (ComplexConstant   0.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 [])) ()))] (Logical 4 []) (LogicalConstant .false. (Logical 4 [])) ()) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (FunctionCall 1 bool@__lpython_overloaded_9__bool 2 bool [((ComplexBinOp (Cast (IntegerConstant 3 (Integer 4 [])) IntegerToComplex (Complex 8 []) (ComplexConstant   3.00000000000000000e+00   0.00000000000000000e+00 (Complex 8 []))) Add (ComplexConstant   0.00000000000000000e+00   5.00000000000000000e+00 (Complex 8 [])) (Complex 8 []) (ComplexConstant   3.00000000000000000e+00   5.00000000000000000e+00 (Complex 8 []))))] (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ())] Source Public Implementation () .false. .false.)}) [])
