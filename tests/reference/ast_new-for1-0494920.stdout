(Module
    [(ImportFrom
        lpython
        [(i32
        ())]
        0
    )
    (For
        (Name
            x
            Store
        )
        (Name
            fruits
            Load
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    x
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            x
            Store
        )
        (Name
            fruits
            Load
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    x
                    Load
                )]
                []
            )
        )
        (If
            (Compare
                (Name
                    x
                    Load
                )
                Eq
                [(ConstantStr
                    "banana"
                    ()
                )]
            )
            [(Break)]
            []
        )]
        []
        ()
    )
    (For
        (Name
            x
            Store
        )
        (ConstantStr
            "banana"
            ()
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    x
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                6
                ()
            )]
            []
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    i
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                2
                ()
            )
            (ConstantInt
                30
                ()
            )
            (ConstantInt
                3
                ()
            )]
            []
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    i
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(If
            (Compare
                (Name
                    i
                    Load
                )
                Eq
                [(ConstantInt
                    3
                    ()
                )]
            )
            [(Continue)]
            []
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    i
                    Load
                )]
                []
            )
        )]
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(ConstantStr
                    "Finally Completed!"
                    ()
                )]
                []
            )
        )]
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(For
            (Name
                j
                Store
            )
            (Call
                (Name
                    range
                    Load
                )
                [(ConstantInt
                    5
                    ()
                )]
                []
            )
            [(Expr
                (Call
                    (Name
                        print
                        Load
                    )
                    [(Name
                        i
                        Load
                    )
                    (Name
                        j
                        Load
                    )]
                    []
                )
            )]
            []
            ()
        )]
        []
        ()
    )
    (AnnAssign
        (Name
            sum
            Store
        )
        (Name
            i32
            Load
        )
        (ConstantInt
            0
            ()
        )
        1
    )
    (For
        (Name
            j
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(AugAssign
            (Name
                sum
                Store
            )
            Add
            (Name
                j
                Load
            )
        )]
        []
        ()
    )
    (For
        (Tuple
            [(Name
                _
                Store
            )
            (Name
                x
                Store
            )]
            Store
        )
        (Name
            y
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Tuple
            [(Name
                x
                Store
            )
            (Name
                y
                Store
            )]
            Store
        )
        (Name
            z
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Tuple
            [(Name
                i
                Store
            )
            (Name
                a
                Store
            )]
            Store
        )
        (Call
            (Name
                enumerate
                Load
            )
            [(List
                [(ConstantInt
                    4
                    ()
                )
                (ConstantInt
                    5
                    ()
                )
                (ConstantInt
                    6
                    ()
                )
                (ConstantInt
                    7
                    ()
                )]
                Load
            )]
            []
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    i
                    Load
                )
                (ConstantStr
                    ": "
                    ()
                )
                (Name
                    a
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(Pass)]
        []
        "int"
    )
    (For
        (Name
            j
            Store
        )
        (Name
            k
            Load
        )
        [(Pass)]
        []
        "List[str]"
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(Pass)]
        [(Pass)]
        "int"
    )]
    []
)
