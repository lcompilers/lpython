(Module
    [(For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(Name
                N
                Load
            )]
            []
        )
        [(Assign
            [(Subscript
                (Name
                    c
                    Load
                )
                (Name
                    i
                    Load
                )
                Store
            )]
            (BinOp
                (Subscript
                    (Name
                        a
                        Load
                    )
                    (Name
                        i
                        Load
                    )
                    Load
                )
                Add
                (BinOp
                    (Name
                        scalar
                        Load
                    )
                    Mult
                    (Subscript
                        (Name
                            b
                            Load
                        )
                        (Name
                            i
                            Load
                        )
                        Load
                    )
                )
            )
            ()
        )]
        []
        "parallel"
    )
    (AnnAssign
        (Name
            i
            Store
        )
        (Name
            i32
            Load
        )
        ()
        1
    )
    (For
        (Name
            i
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                10
                ()
            )]
            []
        )
        [(If
            (Compare
                (ConstantInt
                    2
                    ()
                )
                Gt
                [(Name
                    i
                    Load
                )]
            )
            [(Pass)]
            []
        )
        (If
            (Compare
                (Name
                    i
                    Load
                )
                Gt
                [(ConstantInt
                    5
                    ()
                )]
            )
            [(Break)]
            []
        )
        (If
            (BoolOp
                And
                [(Compare
                    (Name
                        i
                        Load
                    )
                    Eq
                    [(ConstantInt
                        5
                        ()
                    )]
                )
                (Compare
                    (Name
                        i
                        Load
                    )
                    Lt
                    [(ConstantInt
                        10
                        ()
                    )]
                )]
            )
            [(Assign
                [(Name
                    i
                    Store
                )]
                (ConstantInt
                    3
                    ()
                )
                ()
            )]
            []
        )]
        []
        ()
    )
    (For
        (Name
            i
            Store
        )
        (Compare
            (Name
                a
                Load
            )
            In
            [(Name
                list1
                Load
            )]
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Name
            item
            Store
        )
        (Name
            list1
            Load
        )
        [(If
            (Compare
                (Name
                    item
                    Load
                )
                In
                [(Name
                    list2
                    Load
                )]
            )
            [(Pass)]
            []
        )]
        []
        ()
    )
    (If
        (BoolOp
            Or
            [(BoolOp
                And
                [(Compare
                    (Name
                        a
                        Load
                    )
                    In
                    [(Name
                        list1
                        Load
                    )]
                )
                (Compare
                    (Name
                        b
                        Load
                    )
                    NotIn
                    [(Name
                        list2
                        Load
                    )]
                )]
            )
            (Compare
                (Name
                    c
                    Load
                )
                In
                [(Name
                    list3
                    Load
                )]
            )]
        )
        [(Pass)]
        []
    )
    (For
        (Name
            f
            Store
        )
        (Tuple
            [(Name
                a
                Load
            )
            (Name
                b
                Load
            )
            (Name
                c
                Load
            )
            (Name
                d
                Load
            )]
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Name
            x
            Store
        )
        (Tuple
            [(Name
                a
                Load
            )]
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Name
            x
            Store
        )
        (Tuple
            [(Name
                a
                Load
            )]
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Name
            x
            Store
        )
        (Tuple
            [(Name
                a
                Load
            )
            (Name
                b
                Load
            )]
            Load
        )
        [(Pass)]
        []
        ()
    )
    (AsyncFunctionDef
        test
        ([]
        []
        []
        []
        []
        []
        [])
        [(AsyncFor
            (Name
                x
                Store
            )
            (Tuple
                [(Name
                    a
                    Load
                )
                (Name
                    b
                    Load
                )]
                Load
            )
            [(Pass)]
            []
            ()
        )
        (AsyncFor
            (Name
                x
                Store
            )
            (Tuple
                [(Name
                    a
                    Load
                )]
                Load
            )
            [(Pass)]
            []
            ()
        )]
        []
        ()
        ()
    )
    (For
        (Name
            a
            Store
        )
        (Tuple
            [(Name
                b
                Load
            )
            (Name
                c
                Load
            )]
            Load
        )
        [(Expr
            (BinOp
                (Name
                    a
                    Load
                )
                Pow
                (ConstantInt
                    2
                    ()
                )
            )
        )
        (Pass)]
        []
        ()
    )
    (AsyncFor
        (Name
            a
            Store
        )
        (Call
            (Name
                range
                Load
            )
            [(ConstantInt
                5
                ()
            )]
            []
        )
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    a
                    Load
                )]
                []
            )
        )]
        []
        ()
    )
    (For
        (Name
            like_function
            Store
        )
        (Tuple
            [(Attribute
                (Name
                    np
                    Load
                )
                zeros_like
                Load
            )
            (Attribute
                (Name
                    np
                    Load
                )
                ones_like
                Load
            )
            (Attribute
                (Name
                    np
                    Load
                )
                empty_like
                Load
            )]
            Load
        )
        [(Pass)]
        []
        ()
    )
    (For
        (Tuple
            [(Name
                a
                Store
            )]
            Store
        )
        (Name
            t
            Load
        )
        [(Pass)]
        []
        ()
    )]
    []
)
