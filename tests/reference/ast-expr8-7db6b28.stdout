(Module [(FunctionDef test_binop ([] [] [] [] [] [] []) [(AnnAssign (Name x Store) (Name i32 Load) () 1) (AnnAssign (Name x2 Store) (Name f32 Load) () 1) (Assign [(Name x Store)] (BinOp (ConstantInt 2 ()) Pow (ConstantInt 3 ())) ()) (Assign [(Name x2 Store)] (BinOp (ConstantInt 2 ()) Pow (ConstantFloat   3.50000000000000000e+00 ())) ()) (Assign [(Name x Store)] (BinOp (ConstantInt 54 ()) Sub (ConstantInt 100 ())) ()) (Assign [(Name x2 Store)] (BinOp (BinOp (ConstantFloat   3.45400000000000018e+00 ()) Sub (ConstantFloat   7.65429999999999950e+02 ())) Add (ConstantFloat   5.34600000000000023e+02 ())) ()) (Assign [(Name x2 Store)] (BinOp (ConstantFloat   5.34656499999999960e+03 ()) Mult (ConstantFloat   3.45000000000000018e+00 ())) ()) (Assign [(Name x2 Store)] (BinOp (ConstantFloat   5.34656499999999960e+03 ()) Pow (ConstantFloat   3.45000000000000018e+00 ())) ()) (Assign [(Name x Store)] (BinOp (ConstantBool .true. ()) Add (ConstantBool .true. ())) ()) (Assign [(Name x Store)] (BinOp (ConstantBool .true. ()) Sub (ConstantBool .false. ())) ()) (Assign [(Name x Store)] (BinOp (ConstantBool .true. ()) Mult (ConstantBool .false. ())) ()) (Assign [(Name x Store)] (BinOp (ConstantBool .true. ()) Pow (ConstantBool .false. ())) ()) (AnnAssign (Name b1 Store) (Name bool Load) () 1) (AnnAssign (Name b2 Store) (Name bool Load) () 1) (Assign [(Name b1 Store)] (ConstantBool .true. ()) ()) (Assign [(Name b2 Store)] (ConstantBool .false. ()) ()) (Assign [(Name x Store)] (BinOp (Name b1 Load) FloorDiv (Name b1 Load)) ()) (Assign [(Name x Store)] (BinOp (Name b1 Load) Pow (Name b2 Load)) ())] [] () ())] [])
