(Module
    [(Pass)
    (Break)
    (Continue)
    (Raise
        ()
        ()
    )
    (Raise
        (Call
            (Name
                NameError
                Load
            )
            [(ConstantStr
                "String"
                ()
            )]
            []
        )
        ()
    )
    (Raise
        (Name
            RuntimeError
            Load
        )
        (Name
            exc
            Load
        )
    )
    (Assert
        (Compare
            (Call
                (Name
                    len
                    Load
                )
                [(Name
                    marks
                    Load
                )]
                []
            )
            NotEq
            [(ConstantInt
                0
                ()
            )]
        )
        (ConstantStr
            "List is empty."
            ()
        )
    )
    (Assert
        (Compare
            (Name
                x
                Load
            )
            Eq
            [(ConstantStr
                "String"
                ()
            )]
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )]
        (ConstantInt
            1
            ()
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )
            (Name
                y
                Store
            )]
            Store
        )]
        (Call
            (Name
                x
                Load
            )
            []
            []
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )
        (Name
            y
            Store
        )]
        (ConstantInt
            1
            ()
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )
            (Name
                y
                Store
            )]
            Store
        )]
        (Tuple
            [(ConstantInt
                1
                ()
            )
            (ConstantInt
                2
                ()
            )]
            Load
        )
        ()
    )
    (Assign
        [(Subscript
            (Name
                x
                Load
            )
            (Name
                i
                Load
            )
            Store
        )]
        (Tuple
            [(ConstantInt
                1
                ()
            )
            (ConstantInt
                2
                ()
            )]
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )
            (Name
                y
                Store
            )
            (Name
                z
                Store
            )]
            Store
        )]
        (Name
            t
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )
            (Name
                y
                Store
            )
            (Name
                z
                Store
            )]
            Store
        )]
        (Name
            t
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )]
            Store
        )]
        (Name
            t
            Load
        )
        ()
    )
    (Assign
        [(Tuple
            [(Name
                x
                Store
            )]
            Store
        )]
        (Name
            t
            Load
        )
        ()
    )
    (Assign
        [(Name
            obj
            Store
        )]
        (Tuple
            [(Name
                obj
                Load
            )]
            Load
        )
        ()
    )
    (AugAssign
        (Name
            x
            Store
        )
        Add
        (ConstantInt
            1
            ()
        )
    )
    (AugAssign
        (Name
            x
            Store
        )
        Add
        (Tuple
            [(Name
                y
                Load
            )
            (Name
                z
                Load
            )]
            Load
        )
    )
    (AugAssign
        (Name
            x
            Store
        )
        Add
        (Tuple
            [(Tuple
                [(Name
                    y
                    Load
                )
                (Name
                    z
                    Load
                )]
                Load
            )]
            Load
        )
    )
    (AnnAssign
        (Name
            x
            Store
        )
        (Name
            i64
            Load
        )
        ()
        1
    )
    (AnnAssign
        (Name
            y
            Store
        )
        (Name
            i32
            Load
        )
        (ConstantInt
            1
            ()
        )
        1
    )
    (Delete
        [(Name
            x
            Del
        )]
    )
    (Delete
        [(Tuple
            []
            Del
        )]
    )
    (Delete
        [(Tuple
            [(Name
                x
                Del
            )
            (Name
                y
                Del
            )]
            Del
        )]
    )
    (Delete
        [(Tuple
            [(Name
                x
                Del
            )
            (Name
                y
                Del
            )]
            Del
        )]
    )
    (Delete
        [(Name
            x
            Del
        )
        (Name
            y
            Del
        )]
    )
    (Delete
        [(Name
            x
            Del
        )
        (Name
            y
            Del
        )]
    )
    (Return
        ()
    )
    (Return
        (BinOp
            (Name
                a
                Load
            )
            Add
            (Name
                b
                Load
            )
        )
    )
    (Return
        (Call
            (Name
                x
                Load
            )
            [(Name
                a
                Load
            )]
            []
        )
    )
    (Return
        (Tuple
            []
            Load
        )
    )
    (Return
        (Tuple
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            Load
        )
    )
    (Return
        (Tuple
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            Load
        )
    )
    (Return
        (Tuple
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            Load
        )
    )
    (Return
        (Tuple
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            Load
        )
    )
    (Global
        [a]
    )
    (Global
        [a
        b]
    )
    (Nonlocal
        [a]
    )
    (Nonlocal
        [a
        b]
    )
    (Expr
        (ConstantInt
            123
            ()
        )
    )
    (Expr
        (UnaryOp
            USub
            (ConstantInt
                123
                ()
            )
        )
    )
    (Expr
        (UnaryOp
            USub
            (ConstantInt
                291
                ()
            )
        )
    )
    (Expr
        (ConstantInt
            6844
            ()
        )
    )
    (Expr
        (UnaryOp
            USub
            (ConstantInt
                83
                ()
            )
        )
    )
    (Expr
        (ConstantInt
            87
            ()
        )
    )
    (Expr
        (UnaryOp
            USub
            (ConstantInt
                13
                ()
            )
        )
    )
    (Expr
        (ConstantInt
            13
            ()
        )
    )
    (Expr
        (ConstantInt
            32768
            ()
        )
    )
    (Expr
        (ConstantInt
            12
            ()
        )
    )
    (Expr
        (ConstantInt
            23440334322333
            ()
        )
    )
    (Expr
        (ConstantFloat
            123.000000
            ()
        )
    )
    (Expr
        (ConstantFloat
            123.450000
            ()
        )
    )
    (Expr
        (ConstantFloat
            123400000000.000000
            ()
        )
    )
    (Expr
        (BinOp
            (ConstantInt
                12
                ()
            )
            Add
            (ConstantComplex
                0.000000
                3.000000
                ()
            )
        )
    )
    (Expr
        (BinOp
            (ConstantFloat
                0.120000
                ()
            )
            Add
            (ConstantComplex
                0.000000
                0.001000
                ()
            )
        )
    )
    (Expr
        (ConstantStr
            "String"
            ()
        )
    )
    (Expr
        (ConstantStr
            "String String"
            ()
        )
    )
    (Expr
        (ConstantStr
            "String String"
            ()
        )
    )
    (Expr
        (ConstantStr
            "String String"
            ()
        )
    )
    (Expr
        (Subscript
            (ConstantStr
                "String String"
                ()
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                ()
                ()
            )
            Load
        )
    )
    (Assign
        [(Name
            x
            Store
        )]
        (ConstantStr
            "String String"
            ()
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )]
        (BinOp
            (ConstantStr
                "String "
                ()
            )
            Add
            (ConstantStr
                "String"
                ()
            )
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )]
        (ConstantStr
            "String String"
            ()
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )]
        (ConstantStr
            "String String"
            ()
        )
        ()
    )
    (Assign
        [(Name
            x
            Store
        )]
        (ConstantStr
            "String "
            ()
        )
        ()
    )
    (Expr
        (ConstantStr
            "String"
            ()
        )
    )
    (Expr
        (ConstantBool
            .true.
            ()
        )
    )
    (Expr
        (ConstantBool
            .false.
            ()
        )
    )
    (Expr
        (BinOp
            (BinOp
                (Name
                    x
                    Load
                )
                Add
                (Name
                    y
                    Load
                )
            )
            Mult
            (Name
                z
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            Sub
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            Mult
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            Div
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            Mod
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (UnaryOp
            USub
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (UnaryOp
            UAdd
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (UnaryOp
            Invert
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            Pow
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            FloorDiv
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            MatMult
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            BitAnd
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            BitOr
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            BitXor
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            LShift
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (BinOp
            (Name
                x
                Load
            )
            RShift
            (Name
                y
                Load
            )
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            Eq
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            NotEq
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            Lt
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            LtE
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            Gt
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (Name
                x
                Load
            )
            GtE
            [(Name
                y
                Load
            )]
        )
    )
    (Expr
        (Compare
            (ConstantStr
                "hello"
                ()
            )
            In
            [(Name
                x
                Load
            )]
        )
    )
    (Expr
        (Compare
            (ConstantStr
                "a"
                ()
            )
            In
            [(Call
                (Attribute
                    (Name
                        a
                        Load
                    )
                    func
                    Load
                )
                []
                []
            )]
        )
    )
    (Expr
        (Compare
            (ConstantStr
                "lo"
                ()
            )
            In
            [(ConstantStr
                "hello"
                ()
            )]
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (ConstantInt
                1
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (Tuple
                [(ConstantInt
                    1
                    ()
                )]
                Load
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                ()
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (Slice
                ()
                (UnaryOp
                    USub
                    (ConstantInt
                        1
                        ()
                    )
                )
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                (ConstantInt
                    2
                    ()
                )
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    a
                    Load
                )
                b
                Load
            )
            (Slice
                ()
                ()
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    y
                    Load
                )
                z
                Load
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                (ConstantInt
                    2
                    ()
                )
                (ConstantInt
                    3
                    ()
                )
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    y
                    Load
                )
                z
                Load
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                ()
                (ConstantInt
                    3
                    ()
                )
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Attribute
                (Name
                    y
                    Load
                )
                z
                Load
            )
            (Slice
                (ConstantInt
                    1
                    ()
                )
                ()
                ()
            )
            Load
        )
    )
    (Assign
        [(Name
            x
            Store
        )]
        (NamedExpr
            (Name
                y
                Store
            )
            (ConstantInt
                0
                ()
            )
        )
        ()
    )
    (If
        (NamedExpr
            (Name
                a
                Store
            )
            (Call
                (Name
                    ord
                    Load
                )
                [(ConstantStr
                    "3"
                    ()
                )]
                []
            )
        )
        [(Assign
            [(Name
                x
                Store
            )]
            (ConstantInt
                1
                ()
            )
            ()
        )]
        []
    )
    (Assign
        [(Name
            a
            Store
        )]
        (Set
            [(ConstantInt
                1
                ()
            )
            (ConstantInt
                2
                ()
            )
            (ConstantInt
                3
                ()
            )]
        )
        ()
    )
    (Assign
        [(Name
            a
            Store
        )]
        (Set
            [(ConstantInt
                1
                ()
            )
            (ConstantInt
                2
                ()
            )
            (ConstantInt
                3
                ()
            )]
        )
        ()
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        (Compare
            (Name
                x
                Load
            )
            Eq
            [(Name
                y
                Load
            )]
        )
        1
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        ()
        1
    )
    (Assign
        [(Name
            output
            Store
        )]
        (Compare
            (Name
                x
                Load
            )
            Eq
            [(Name
                y
                Load
            )]
        )
        ()
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        (Compare
            (Name
                x
                Load
            )
            Gt
            [(Name
                y
                Load
            )]
        )
        1
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        ()
        1
    )
    (Assign
        [(Name
            output
            Store
        )]
        (Compare
            (Name
                x
                Load
            )
            Gt
            [(Name
                y
                Load
            )]
        )
        ()
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        (Compare
            (List
                [(Name
                    x
                    Load
                )]
                Load
            )
            NotIn
            [(List
                [(Name
                    y
                    Load
                )]
                Load
            )]
        )
        1
    )
    (AnnAssign
        (Name
            output
            Store
        )
        (Name
            bool
            Load
        )
        ()
        1
    )
    (Assign
        [(Name
            output
            Store
        )]
        (Compare
            (List
                [(Name
                    x
                    Load
                )]
                Load
            )
            NotIn
            [(List
                [(Name
                    y
                    Load
                )]
                Load
            )]
        )
        ()
    )
    (FunctionDef
        comparison_return
        ([]
        [(a
        ()
        ())
        (b
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Return
            (Compare
                (Name
                    a
                    Load
                )
                Gt
                [(Name
                    b
                    Load
                )]
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        comparison_return
        ([]
        [(a
        ()
        ())
        (b
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Return
            (Compare
                (List
                    [(Name
                        a
                        Load
                    )]
                    Load
                )
                In
                [(List
                    [(Name
                        b
                        Load
                    )]
                    Load
                )]
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        comparison_return
        ([]
        [(a
        ()
        ())
        (b
        ()
        ())]
        []
        []
        []
        []
        [])
        [(AnnAssign
            (Name
                output
                Store
            )
            (Name
                bool
                Load
            )
            ()
            1
        )
        (Assign
            [(Name
                output
                Store
            )]
            (Compare
                (List
                    [(Name
                        a
                        Load
                    )]
                    Load
                )
                NotIn
                [(List
                    [(Name
                        b
                        Load
                    )]
                    Load
                )]
            )
            ()
        )
        (Return
            (Name
                output
                Load
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        comparison_return
        ([]
        [(a
        ()
        ())
        (b
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Assign
            [(Name
                output
                Store
            )]
            (Compare
                (List
                    [(Name
                        a
                        Load
                    )]
                    Load
                )
                NotIn
                [(List
                    [(Name
                        b
                        Load
                    )]
                    Load
                )]
            )
            ()
        )
        (Return
            (Name
                output
                Load
            )
        )]
        []
        ()
        ()
    )]
    []
)
