(Module
    [(ImportFrom
        lpython
        [(i32
        ())
        (overload
        ())]
        0
    )
    (FunctionDef
        greet
        ([]
        [(name
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Expr
            (ConstantStr
                "\n    This function greets to\n    the person passed in as\n    a parameter\n    "
                ()
            )
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(BinOp
                    (BinOp
                        (ConstantStr
                            "Hello, "
                            ()
                        )
                        Add
                        (Name
                            name
                            Load
                        )
                    )
                    Add
                    (ConstantStr
                        ". Good morning!"
                        ()
                    )
                )]
                []
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        absolute_value
        ([]
        [(num
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Expr
            (ConstantStr
                "This function returns the absolute\n    value of the entered number"
                ()
            )
        )
        (If
            (Compare
                (Name
                    num
                    Load
                )
                GtE
                [(ConstantInt
                    0
                    ()
                )]
            )
            [(Return
                (Name
                    num
                    Load
                )
            )]
            [(Return
                (UnaryOp
                    USub
                    (Name
                        num
                        Load
                    )
                )
            )]
        )]
        []
        ()
        ()
    )
    (FunctionDef
        combine
        ([]
        [(fname
        ()
        ())
        (lname
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(BinOp
                    (BinOp
                        (Name
                            fname
                            Load
                        )
                        Add
                        (ConstantStr
                            " "
                            ()
                        )
                    )
                    Add
                    (Name
                        lname
                        Load
                    )
                )]
                []
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        tri_recursion
        ([]
        [(k
        ()
        ())]
        []
        []
        []
        []
        [])
        [(If
            (Compare
                (Name
                    k
                    Load
                )
                Gt
                [(ConstantInt
                    0
                    ()
                )]
            )
            [(Assign
                [(Name
                    result
                    Store
                )]
                (BinOp
                    (Name
                        k
                        Load
                    )
                    Add
                    (Call
                        (Name
                            tri_recursion
                            Load
                        )
                        [(BinOp
                            (Name
                                k
                                Load
                            )
                            Sub
                            (ConstantInt
                                1
                                ()
                            )
                        )]
                        []
                    )
                )
                ()
            )
            (Expr
                (Call
                    (Name
                        print
                        Load
                    )
                    [(Name
                        result
                        Load
                    )]
                    []
                )
            )]
            [(Assign
                [(Name
                    result
                    Store
                )]
                (ConstantInt
                    0
                    ()
                )
                ()
            )]
        )
        (Return
            (Name
                result
                Load
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        test
        ([]
        [(a
        (Name
            i32
            Load
        )
        ())]
        []
        []
        []
        []
        [])
        [(Return
            (BinOp
                (Name
                    a
                    Load
                )
                Add
                (ConstantInt
                    10
                    ()
                )
            )
        )]
        [(Name
            overload
            Load
        )]
        (Name
            i32
            Load
        )
        ()
    )
    (FunctionDef
        test
        ([]
        [(a
        (Name
            i64
            Load
        )
        ())]
        []
        []
        []
        []
        [])
        [(Return
            (BinOp
                (Name
                    a
                    Load
                )
                Add
                (ConstantInt
                    10
                    ()
                )
            )
        )]
        [(Name
            overload
            Load
        )]
        (Name
            i64
            Load
        )
        ()
    )
    (FunctionDef
        test
        ([]
        [(a
        (Name
            bool
            Load
        )
        ())]
        []
        []
        []
        []
        [])
        [(If
            (Name
                a
                Load
            )
            [(Return
                (ConstantInt
                    10
                    ()
                )
            )]
            []
        )
        (Return
            (UnaryOp
                USub
                (ConstantInt
                    10
                    ()
                )
            )
        )]
        [(Name
            overload
            Load
        )]
        (Name
            i32
            Load
        )
        ()
    )
    (FunctionDef
        check
        ([]
        []
        []
        []
        []
        []
        [])
        [(Expr
            (Call
                (Name
                    greet
                    Load
                )
                [(ConstantStr
                    "Xyz"
                    ()
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Call
                    (Name
                        absolute_value
                        Load
                    )
                    [(ConstantInt
                        2
                        ()
                    )]
                    []
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    combine
                    Load
                )
                [(ConstantStr
                    "LPython"
                    ()
                )
                (ConstantStr
                    "Compiler"
                    ()
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(ConstantStr
                    "Recursion Example Results: "
                    ()
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    tri_recursion
                    Load
                )
                [(ConstantInt
                    6
                    ()
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Call
                    (Name
                        test
                        Load
                    )
                    [(ConstantInt
                        15
                        ()
                    )]
                    []
                )]
                []
            )
        )
        (Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Call
                    (Name
                        test
                        Load
                    )
                    [(ConstantBool
                        .true.
                        ()
                    )]
                    []
                )]
                []
            )
        )]
        []
        ()
        ()
    )
    (Expr
        (Call
            (Name
                check
                Load
            )
            []
            []
        )
    )
    (FunctionDef
        print_args
        ([]
        []
        [(args
        ()
        ())]
        []
        []
        []
        [])
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    args
                    Load
                )]
                []
            )
        )]
        []
        ()
        ()
    )
    (FunctionDef
        print_kwargs
        ([]
        []
        []
        []
        []
        [(kwargs
        ()
        ())]
        [])
        [(Expr
            (Call
                (Name
                    print
                    Load
                )
                [(Name
                    kwargs
                    Load
                )]
                []
            )
        )]
        []
        ()
        ()
    )]
    []
)
