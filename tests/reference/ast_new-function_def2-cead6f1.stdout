(Module
    [(FunctionDef
        test_01
        ([]
        []
        []
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_02
        ([]
        []
        [(x
        (Name
            i32
            Load
        )
        ())]
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_03
        ([]
        []
        [(x
        ()
        ())]
        [(y
        ()
        ())
        (z
        ()
        ())]
        [(ConstantNone
            ()
        )
        (ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_04
        ([]
        []
        [(x
        ()
        ())]
        [(y
        ()
        ())
        (z
        ()
        ())]
        [(ConstantNone
            ()
        )
        (ConstantNone
            ()
        )]
        [(args
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_05
        ([]
        []
        [(x
        ()
        ())]
        []
        []
        [(args
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_06
        ([]
        []
        []
        []
        []
        [(args
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_07
        ([]
        [(x
        (Name
            i32
            Load
        )
        ())
        (y
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_08
        ([]
        [(x
        ()
        ())]
        [(y
        ()
        ())]
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_09
        ([]
        [(x
        ()
        ())]
        [(y
        ()
        ())]
        [(z
        ()
        ())]
        [(ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_10
        ([]
        [(x
        ()
        ())]
        [(y
        ()
        ())]
        [(z
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(args
        (Name
            i32
            Load
        )
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_11
        ([]
        [(x
        ()
        ())]
        [(y
        ()
        ())]
        []
        []
        [(args
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_12
        ([]
        [(x
        ()
        ())]
        []
        []
        []
        [(args
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_13
        ([]
        [(x
        (Name
            i32
            Load
        )
        ())
        (y
        (Name
            i32
            Load
        )
        ())]
        []
        []
        []
        []
        [(ConstantInt
            1
            ()
        )
        (ConstantInt
            1
            ()
        )])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_14
        ([]
        [(x
        ()
        ())]
        [(y
        ()
        ())]
        [(z
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(args
        (Name
            i32
            Load
        )
        ())]
        [])
        [(Pass)]
        []
        (Name
            i32
            Load
        )
        ()
    )
    (FunctionDef
        test_15
        ([(a
        ()
        ())]
        []
        []
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_16
        ([(a
        ()
        ())]
        [(b
        ()
        ())
        (c
        ()
        ())]
        []
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_17
        ([(a
        ()
        ())]
        []
        [(b
        ()
        ())]
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_18
        ([(a
        (Name
            i32
            Load
        )
        ())]
        []
        [(b
        (Name
            i64
            Load
        )
        ())]
        [(c
        (Name
            i32
            Load
        )
        ())
        (d
        (Name
            i32
            Load
        )
        ())]
        [(ConstantNone
            ()
        )
        (ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_19
        ([(a
        ()
        ())]
        []
        [(b
        ()
        ())]
        [(c
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(d
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_20
        ([(a
        ()
        ())]
        []
        []
        []
        []
        [(b
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_21
        ([(a
        ()
        ())]
        []
        [(b
        ()
        ())]
        []
        []
        [(c
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_22
        ([(a
        ()
        ())]
        [(b
        ()
        ())
        (c
        ()
        ())]
        [(d
        ()
        ())]
        []
        []
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_23
        ([(a
        ()
        ())]
        [(b
        ()
        ())
        (c
        ()
        ())]
        []
        []
        []
        [(d
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_24
        ([(a
        ()
        ())]
        [(b
        ()
        ())
        (c
        ()
        ())]
        [(d
        ()
        ())]
        []
        []
        [(e
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_25
        ([(a
        ()
        ())]
        [(b
        ()
        ())
        (c
        ()
        ())]
        [(d
        ()
        ())]
        [(e
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(f
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_26
        ([]
        []
        []
        [(a
        ()
        ())]
        [(ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_27
        ([]
        []
        []
        [(a
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(b
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_28
        ([]
        [(a
        ()
        ())]
        []
        [(b
        ()
        ())]
        [(ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_29
        ([]
        [(a
        ()
        ())]
        []
        [(b
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(c
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_30
        ([(a
        ()
        ())]
        []
        []
        [(b
        ()
        ())]
        [(ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_31
        ([(a
        ()
        ())]
        [(b
        ()
        ())]
        []
        [(c
        ()
        ())]
        [(ConstantNone
            ()
        )]
        []
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_32
        ([(a
        ()
        ())]
        []
        []
        [(c
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(d
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (FunctionDef
        test_33
        ([(a
        ()
        ())]
        [(b
        ()
        ())]
        []
        [(c
        ()
        ())]
        [(ConstantNone
            ()
        )]
        [(d
        ()
        ())]
        [])
        [(Pass)]
        []
        ()
        ()
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            []
            []
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Name
                x
                Load
            )]
            [(y
            (ConstantInt
                1
                ()
            ))
            (z
            (ConstantStr
                "123"
                ()
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(ConstantInt
                100
                ()
            )]
            [(()
            (Name
                x
                Load
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    x
                    Load
                )
                Load
            )]
            [(()
            (Name
                y
                Load
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    x
                    Load
                )
                Load
            )
            (Name
                y
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    x
                    Load
                )
                Load
            )
            (Starred
                (Name
                    y
                    Load
                )
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            []
            [(()
            (Name
                x
                Load
            ))
            (()
            (Name
                y
                Load
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    x
                    Load
                )
                Load
            )]
            [(y
            (ConstantInt
                1
                ()
            ))
            (z
            (ConstantInt
                2
                ()
            ))
            (()
            (Name
                a
                Load
            ))
            (b
            (ConstantInt
                1
                ()
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    x
                    Load
                )
                Load
            )]
            [(()
            (Name
                a
                Load
            ))
            (b
            (ConstantStr
                "1"
                ()
            ))]
        )
    )
    (Expr
        (Call
            (Name
                test
                Load
            )
            [(Starred
                (Name
                    y
                    Load
                )
                Load
            )]
            [(x
            (ConstantInt
                1
                ()
            ))
            (z
            (ConstantInt
                2
                ()
            ))
            (()
            (Name
                a
                Load
            ))
            (b
            (ConstantStr
                "1"
                ()
            ))]
        )
    )
    (Expr
        (Call
            (Attribute
                (Name
                    lp
                    Load
                )
                test
                Load
            )
            []
            []
        )
    )
    (Expr
        (Call
            (Attribute
                (Name
                    lp
                    Load
                )
                test
                Load
            )
            [(Name
                x
                Load
            )
            (Name
                y
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Attribute
                (Name
                    lp
                    Load
                )
                test
                Load
            )
            [(Name
                x
                Load
            )]
            [(y
            (ConstantInt
                1
                ()
            ))
            (z
            (ConstantStr
                "123"
                ()
            ))]
        )
    )
    (Expr
        (Subscript
            (Call
                (Name
                    test
                    Load
                )
                []
                []
            )
            (ConstantStr
                "version"
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Call
                (Name
                    test
                    Load
                )
                [(Name
                    x
                    Load
                )
                (Name
                    y
                    Load
                )]
                []
            )
            (ConstantStr
                "version"
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Call
                (Name
                    test
                    Load
                )
                [(Name
                    x
                    Load
                )
                (Starred
                    (Name
                        y
                        Load
                    )
                    Load
                )]
                []
            )
            (Slice
                ()
                (UnaryOp
                    USub
                    (ConstantInt
                        1
                        ()
                    )
                )
                ()
            )
            Load
        )
    )
    (Expr
        (Subscript
            (Subscript
                (Call
                    (Name
                        test
                        Load
                    )
                    []
                    []
                )
                (ConstantInt
                    1
                    ()
                )
                Load
            )
            (ConstantInt
                1
                ()
            )
            Load
        )
    )
    (Expr
        (Call
            (Subscript
                (Name
                    x
                    Load
                )
                (ConstantStr
                    "numpystr"
                    ()
                )
                Load
            )
            []
            []
        )
    )
    (Expr
        (Call
            (Subscript
                (Name
                    x
                    Load
                )
                (ConstantStr
                    "int"
                    ()
                )
                Load
            )
            []
            []
        )
    )
    (Expr
        (Call
            (Subscript
                (Name
                    x
                    Load
                )
                (Name
                    func
                    Load
                )
                Load
            )
            [(Starred
                (Name
                    args
                    Load
                )
                Load
            )]
            [(()
            (Name
                kwargs
                Load
            ))]
        )
    )
    (Expr
        (Call
            (Subscript
                (Name
                    test
                    Load
                )
                (ConstantInt
                    0
                    ()
                )
                Load
            )
            [(Starred
                (Subscript
                    (Name
                        test
                        Load
                    )
                    (Slice
                        (ConstantInt
                            1
                            ()
                        )
                        ()
                        ()
                    )
                    Load
                )
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (BinOp
                (Name
                    obj
                    Load
                )
                Mult
                (Attribute
                    (Attribute
                        (Name
                            self
                            Load
                        )
                        _arr
                        Load
                    )
                    ndim
                    Load
                )
            )
            [(Starred
                (Attribute
                    (Attribute
                        (Name
                            self
                            Load
                        )
                        _arr
                        Load
                    )
                    shape
                    Load
                )
                Load
            )]
            []
        )
    )
    (Expr
        (Call
            (Name
                traverse
                Load
            )
            [(Tuple
                [(Name
                    index
                    Load
                )
                (Name
                    value
                    Load
                )]
                Load
            )
            (Name
                visit
                Load
            )
            (Starred
                (Name
                    args
                    Load
                )
                Load
            )]
            [(result
            (Name
                result
                Load
            ))
            (()
            (Name
                kwargs
                Load
            ))]
        )
    )]
    []
)
