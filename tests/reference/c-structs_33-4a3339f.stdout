#include <inttypes.h>

#include <stdlib.h>
#include <stdbool.h>
#include <stdio.h>
#include <string.h>
#include <lfortran_intrinsics.h>

struct dimension_descriptor
{
    int32_t lower_bound, length;
};
struct __attribute__((packed)) inner_struct {
 int32_t inner_field;
};

struct __attribute__((packed)) outer_struct {
 struct inner_struct inner_s;
};


inline void struct_deepcopy_outer_struct_dDlxNRXWp61v0dga17TkWW(struct outer_struct* src, struct outer_struct* dest);
inline void struct_deepcopy_inner_struct_dDlxNRXWp61v0dga17TkWW(struct inner_struct* src, struct inner_struct* dest);


// Implementations
void check()
{
    struct inner_struct inner_struct_instance_value_dDlxNRXWp61v0dga17TkWW;
    struct inner_struct* inner_struct_instance = &inner_struct_instance_value_dDlxNRXWp61v0dga17TkWW;
    struct outer_struct outer_struct_instance_value_dDlxNRXWp61v0dga17TkWW;
    struct outer_struct* outer_struct_instance = &outer_struct_instance_value_dDlxNRXWp61v0dga17TkWW;
    struct outer_struct outer_struct_instance2_value_dDlxNRXWp61v0dga17TkWW;
    struct outer_struct* outer_struct_instance2 = &outer_struct_instance2_value_dDlxNRXWp61v0dga17TkWW;
    outer_struct_instance->inner_s.inner_field = 5;
    struct_deepcopy_outer_struct_dDlxNRXWp61v0dga17TkWW(outer_struct_instance, outer_struct_instance2);
    struct_deepcopy_inner_struct_dDlxNRXWp61v0dga17TkWW(&outer_struct_instance2->inner_s, inner_struct_instance);
    ASSERT(inner_struct_instance->inner_field == 5);
}

void _lpython_main_program()
{
    check();
}

int main(int argc, char* argv[])
{
    _lpython_set_argv(argc, argv);
    _lpython_main_program();
    return 0;
}

void struct_deepcopy_inner_struct_dDlxNRXWp61v0dga17TkWW(struct inner_struct* src, struct inner_struct* dest) {
    dest->inner_field =  src->inner_field;
}

void struct_deepcopy_outer_struct_dDlxNRXWp61v0dga17TkWW(struct outer_struct* src, struct outer_struct* dest) {
    struct_deepcopy_inner_struct_dDlxNRXWp61v0dga17TkWW(&(src->inner_s), &(dest->inner_s));;
}


