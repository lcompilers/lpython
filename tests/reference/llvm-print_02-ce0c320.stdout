; ModuleID = 'LFortran'
source_filename = "LFortran"

%list = type { i32, i32, i8** }
%list.0 = type { i32, i32, i32* }
%list.1 = type { i32, i32, double* }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@3 = private unnamed_addr constant [4 x i8] c"abc\00", align 1
@4 = private unnamed_addr constant [5 x i8] c"abcd\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@8 = private unnamed_addr constant [3 x i8] c", \00", align 1
@9 = private unnamed_addr constant [4 x i8] c"abc\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@11 = private unnamed_addr constant [3 x i8] c", \00", align 1
@12 = private unnamed_addr constant [5 x i8] c"abcd\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@15 = private unnamed_addr constant [29 x i8] c"%s%s%s%s%s%s%s%s%s%s%s%s%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@19 = private unnamed_addr constant [3 x i8] c", \00", align 1
@20 = private unnamed_addr constant [3 x i8] c", \00", align 1
@21 = private unnamed_addr constant [3 x i8] c", \00", align 1
@22 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@23 = private unnamed_addr constant [21 x i8] c"%s%d%s%d%s%d%s%d%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@27 = private unnamed_addr constant [3 x i8] c", \00", align 1
@28 = private unnamed_addr constant [3 x i8] c", \00", align 1
@29 = private unnamed_addr constant [3 x i8] c", \00", align 1
@30 = private unnamed_addr constant [3 x i8] c", \00", align 1
@31 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@32 = private unnamed_addr constant [25 x i8] c"%s%f%s%f%s%f%s%f%s%f%s%s\00", align 1
@33 = private unnamed_addr constant [2 x i8] c" \00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@36 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@39 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@41 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@44 = private unnamed_addr constant [3 x i8] c", \00", align 1
@45 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@47 = private unnamed_addr constant [3 x i8] c", \00", align 1
@48 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@49 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@50 = private unnamed_addr constant [3 x i8] c", \00", align 1
@51 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@52 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@53 = private unnamed_addr constant [3 x i8] c", \00", align 1
@54 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@55 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@56 = private unnamed_addr constant [3 x i8] c", \00", align 1
@57 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@59 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@60 = private unnamed_addr constant [53 x i8] c"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\00", align 1

define void @_lpython_main_program() {
.entry:
  call void @f()
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define void @f() {
.entry:
  %const_list = alloca %list, align 8
  %0 = call i8* (i32, ...) @_lfortran_malloc(i32 24)
  %1 = bitcast i8* %0 to i8**
  %2 = getelementptr %list, %list* %const_list, i32 0, i32 2
  store i8** %1, i8*** %2, align 8
  %3 = getelementptr %list, %list* %const_list, i32 0, i32 0
  store i32 3, i32* %3, align 4
  %4 = getelementptr %list, %list* %const_list, i32 0, i32 1
  store i32 3, i32* %4, align 4
  %5 = getelementptr %list, %list* %const_list, i32 0, i32 2
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %6, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i8** %7, align 8
  %8 = getelementptr %list, %list* %const_list, i32 0, i32 2
  %9 = load i8**, i8*** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %9, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i32 0, i32 0), i8** %10, align 8
  %11 = getelementptr %list, %list* %const_list, i32 0, i32 2
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i32 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8** %13, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %const_list1 = alloca %list.0, align 8
  %14 = call i8* (i32, ...) @_lfortran_malloc(i32 16)
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 2
  store i32* %15, i32** %16, align 8
  %17 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 0
  store i32 4, i32* %17, align 4
  %18 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 1
  store i32 4, i32* %18, align 4
  %19 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i32 0
  store i32 1, i32* %21, align 4
  %22 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 2
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i32 1
  store i32 2, i32* %24, align 4
  %25 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 2
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i32 2
  store i32 3, i32* %27, align 4
  %28 = getelementptr %list.0, %list.0* %const_list1, i32 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i32 3
  store i32 4, i32* %30, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @19, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @21, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  %const_list2 = alloca %list.1, align 8
  %31 = call i8* (i32, ...) @_lfortran_malloc(i32 40)
  %32 = bitcast i8* %31 to double*
  %33 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  store double* %32, double** %33, align 8
  %34 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 0
  store i32 5, i32* %34, align 4
  %35 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 1
  store i32 5, i32* %35, align 4
  %36 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  %37 = load double*, double** %36, align 8
  %38 = getelementptr inbounds double, double* %37, i32 0
  store double 1.230000e+00, double* %38, align 8
  %39 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  %40 = load double*, double** %39, align 8
  %41 = getelementptr inbounds double, double* %40, i32 1
  store double 3.243000e+02, double* %41, align 8
  %42 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  %43 = load double*, double** %42, align 8
  %44 = getelementptr inbounds double, double* %43, i32 2
  store double 5.643100e+01, double* %44, align 8
  %45 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  %46 = load double*, double** %45, align 8
  %47 = getelementptr inbounds double, double* %46, i32 3
  store double 9.050000e+01, double* %47, align 8
  %48 = getelementptr %list.1, %list.1* %const_list2, i32 0, i32 2
  %49 = load double*, double** %48, align 8
  %50 = getelementptr inbounds double, double* %49, i32 4
  store double 3.410000e+01, double* %50, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0), double 1.230000e+00, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @27, i32 0, i32 0), double 3.243000e+02, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @28, i32 0, i32 0), double 5.643100e+01, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i32 0, i32 0), double 9.050000e+01, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @30, i32 0, i32 0), double 3.410000e+01, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  %const_list3 = alloca %list, align 8
  %51 = call i8* (i32, ...) @_lfortran_malloc(i32 48)
  %52 = bitcast i8* %51 to i8**
  %53 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  store i8** %52, i8*** %53, align 8
  %54 = getelementptr %list, %list* %const_list3, i32 0, i32 0
  store i32 6, i32* %54, align 4
  %55 = getelementptr %list, %list* %const_list3, i32 0, i32 1
  store i32 6, i32* %55, align 4
  %56 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %57 = load i8**, i8*** %56, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i8** %58, align 8
  %59 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %60 = load i8**, i8*** %59, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @36, i32 0, i32 0), i8** %61, align 8
  %62 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %63 = load i8**, i8*** %62, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0), i8** %64, align 8
  %65 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %66 = load i8**, i8*** %65, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i32 3
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0), i8** %67, align 8
  %68 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %69 = load i8**, i8*** %68, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i32 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @39, i32 0, i32 0), i8** %70, align 8
  %71 = getelementptr %list, %list* %const_list3, i32 0, i32 2
  %72 = load i8**, i8*** %71, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i32 5
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i8** %73, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @50, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

define i32 @main() {
.entry:
  call void @_lpython_main_program()
  ret i32 0
}
