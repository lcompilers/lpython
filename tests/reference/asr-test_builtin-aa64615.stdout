(TranslationUnit (SymbolTable 1 {_lpython_main_program: (Subroutine (SymbolTable 98 {}) _lpython_main_program [] [(SubroutineCall 1 test_ord () [] ()) (SubroutineCall 1 test_chr () [] ())] Source Public Implementation () .false. .false.), lpython_builtin: (IntrinsicModule lpython_builtin), main_program: (Program (SymbolTable 97 {}) main_program [] [(SubroutineCall 1 _lpython_main_program () [] ())]), test_chr: (Subroutine (SymbolTable 3 {capital_a: (Variable 3 capital_a Local () () Default (Character 1 -2 () []) Source Public Required .false.), capital_z: (Variable 3 capital_z Local () () Default (Character 1 -2 () []) Source Public Required .false.), chr: (ExternalSymbol 3 chr 5 chr lpython_builtin [] chr Private), dollar: (Variable 3 dollar Local () () Default (Character 1 -2 () []) Source Public Required .false.), exclamation: (Variable 3 exclamation Local () () Default (Character 1 -2 () []) Source Public Required .false.), i: (Variable 3 i Local () () Default (Integer 4 []) Source Public Required .false.), left_parenthesis: (Variable 3 left_parenthesis Local () () Default (Character 1 -2 () []) Source Public Required .false.), nine: (Variable 3 nine Local () () Default (Character 1 -2 () []) Source Public Required .false.), plus: (Variable 3 plus Local () () Default (Character 1 -2 () []) Source Public Required .false.), right_brace: (Variable 3 right_brace Local () () Default (Character 1 -2 () []) Source Public Required .false.), right_bracket: (Variable 3 right_bracket Local () () Default (Character 1 -2 () []) Source Public Required .false.), semicolon: (Variable 3 semicolon Local () () Default (Character 1 -2 () []) Source Public Required .false.), small_a: (Variable 3 small_a Local () () Default (Character 1 -2 () []) Source Public Required .false.), small_z: (Variable 3 small_z Local () () Default (Character 1 -2 () []) Source Public Required .false.), zero: (Variable 3 zero Local () () Default (Character 1 -2 () []) Source Public Required .false.)}) test_chr [] [(= (Var 3 i) (IntegerConstant 33 (Integer 4 [])) ()) (= (Var 3 exclamation) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 33 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "!" (Character 1 1 () [])) ()) Eq (StringConstant "!" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 exclamation) Eq (StringConstant "!" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 36 (Integer 4 [])) ()) (= (Var 3 dollar) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 36 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "$" (Character 1 1 () [])) ()) Eq (StringConstant "$" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 dollar) Eq (StringConstant "$" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 40 (Integer 4 [])) ()) (= (Var 3 left_parenthesis) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 40 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "(" (Character 1 1 () [])) ()) Eq (StringConstant "(" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 left_parenthesis) Eq (StringConstant "(" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 43 (Integer 4 [])) ()) (= (Var 3 plus) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 43 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "+" (Character 1 1 () [])) ()) Eq (StringConstant "+" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 plus) Eq (StringConstant "+" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 48 (Integer 4 [])) ()) (= (Var 3 zero) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 48 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "0" (Character 1 1 () [])) ()) Eq (StringConstant "0" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 zero) Eq (StringConstant "0" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 57 (Integer 4 [])) ()) (= (Var 3 nine) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 57 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "9" (Character 1 1 () [])) ()) Eq (StringConstant "9" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 nine) Eq (StringConstant "9" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 59 (Integer 4 [])) ()) (= (Var 3 semicolon) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 59 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant ";" (Character 1 1 () [])) ()) Eq (StringConstant ";" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 semicolon) Eq (StringConstant ";" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 65 (Integer 4 [])) ()) (= (Var 3 capital_a) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 65 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "A" (Character 1 1 () [])) ()) Eq (StringConstant "A" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 capital_a) Eq (StringConstant "A" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 90 (Integer 4 [])) ()) (= (Var 3 capital_z) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 90 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "Z" (Character 1 1 () [])) ()) Eq (StringConstant "Z" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 capital_z) Eq (StringConstant "Z" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 93 (Integer 4 [])) ()) (= (Var 3 right_bracket) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 93 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "]" (Character 1 1 () [])) ()) Eq (StringConstant "]" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 right_bracket) Eq (StringConstant "]" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 97 (Integer 4 [])) ()) (= (Var 3 small_a) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 97 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "a" (Character 1 1 () [])) ()) Eq (StringConstant "a" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 small_a) Eq (StringConstant "a" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 122 (Integer 4 [])) ()) (= (Var 3 small_z) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 122 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "z" (Character 1 1 () [])) ()) Eq (StringConstant "z" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 small_z) Eq (StringConstant "z" (Character 1 1 () [])) (Logical 4 []) () ()) ()) (= (Var 3 i) (IntegerConstant 125 (Integer 4 [])) ()) (= (Var 3 right_brace) (FunctionCall 3 chr () [((Var 3 i))] (Character 1 -2 () []) () ()) ()) (Assert (Compare (FunctionCall 3 chr () [((IntegerConstant 125 (Integer 4 [])))] (Character 1 -2 () []) (StringConstant "}" (Character 1 1 () [])) ()) Eq (StringConstant "}" (Character 1 1 () [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 3 right_brace) Eq (StringConstant "}" (Character 1 1 () [])) (Logical 4 []) () ()) ())] Source Public Implementation () .false. .false.), test_ord: (Subroutine (SymbolTable 2 {capital_a_unicode: (Variable 2 capital_a_unicode Local () () Default (Integer 4 []) Source Public Required .false.), capital_z_unicode: (Variable 2 capital_z_unicode Local () () Default (Integer 4 []) Source Public Required .false.), dollar_unicode: (Variable 2 dollar_unicode Local () () Default (Integer 4 []) Source Public Required .false.), exclamation_unicode: (Variable 2 exclamation_unicode Local () () Default (Integer 4 []) Source Public Required .false.), left_parenthesis_unicode: (Variable 2 left_parenthesis_unicode Local () () Default (Integer 4 []) Source Public Required .false.), nine_unicode: (Variable 2 nine_unicode Local () () Default (Integer 4 []) Source Public Required .false.), ord: (ExternalSymbol 2 ord 5 ord lpython_builtin [] ord Private), plus_unicode: (Variable 2 plus_unicode Local () () Default (Integer 4 []) Source Public Required .false.), right_brace_unicode: (Variable 2 right_brace_unicode Local () () Default (Integer 4 []) Source Public Required .false.), right_bracket_unicode: (Variable 2 right_bracket_unicode Local () () Default (Integer 4 []) Source Public Required .false.), s: (Variable 2 s Local () () Default (Character 1 -2 () []) Source Public Required .false.), semicolon_unicode: (Variable 2 semicolon_unicode Local () () Default (Integer 4 []) Source Public Required .false.), small_a_unicode: (Variable 2 small_a_unicode Local () () Default (Integer 4 []) Source Public Required .false.), small_z_unicode: (Variable 2 small_z_unicode Local () () Default (Integer 4 []) Source Public Required .false.), zero_unicode: (Variable 2 zero_unicode Local () () Default (Integer 4 []) Source Public Required .false.)}) test_ord [] [(= (Var 2 s) (StringConstant "!" (Character 1 1 () [])) ()) (= (Var 2 exclamation_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "!" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 33 (Integer 4 [])) ()) Eq (IntegerConstant 33 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 exclamation_unicode) Eq (IntegerConstant 33 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "$" (Character 1 1 () [])) ()) (= (Var 2 dollar_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "$" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 36 (Integer 4 [])) ()) Eq (IntegerConstant 36 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 dollar_unicode) Eq (IntegerConstant 36 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "(" (Character 1 1 () [])) ()) (= (Var 2 left_parenthesis_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "(" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 40 (Integer 4 [])) ()) Eq (IntegerConstant 40 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 left_parenthesis_unicode) Eq (IntegerConstant 40 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "+" (Character 1 1 () [])) ()) (= (Var 2 plus_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "+" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 43 (Integer 4 [])) ()) Eq (IntegerConstant 43 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 plus_unicode) Eq (IntegerConstant 43 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "0" (Character 1 1 () [])) ()) (= (Var 2 zero_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "0" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 48 (Integer 4 [])) ()) Eq (IntegerConstant 48 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 zero_unicode) Eq (IntegerConstant 48 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "9" (Character 1 1 () [])) ()) (= (Var 2 nine_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "9" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 57 (Integer 4 [])) ()) Eq (IntegerConstant 57 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 nine_unicode) Eq (IntegerConstant 57 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant ";" (Character 1 1 () [])) ()) (= (Var 2 semicolon_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant ";" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 59 (Integer 4 [])) ()) Eq (IntegerConstant 59 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 semicolon_unicode) Eq (IntegerConstant 59 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "A" (Character 1 1 () [])) ()) (= (Var 2 capital_a_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "A" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 65 (Integer 4 [])) ()) Eq (IntegerConstant 65 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 capital_a_unicode) Eq (IntegerConstant 65 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "Z" (Character 1 1 () [])) ()) (= (Var 2 capital_z_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "Z" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 90 (Integer 4 [])) ()) Eq (IntegerConstant 90 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 capital_z_unicode) Eq (IntegerConstant 90 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "]" (Character 1 1 () [])) ()) (= (Var 2 right_bracket_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "]" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 93 (Integer 4 [])) ()) Eq (IntegerConstant 93 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 right_bracket_unicode) Eq (IntegerConstant 93 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "a" (Character 1 1 () [])) ()) (= (Var 2 small_a_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "a" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 97 (Integer 4 [])) ()) Eq (IntegerConstant 97 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 small_a_unicode) Eq (IntegerConstant 97 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "z" (Character 1 1 () [])) ()) (= (Var 2 small_z_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "z" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 122 (Integer 4 [])) ()) Eq (IntegerConstant 122 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 small_z_unicode) Eq (IntegerConstant 122 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 s) (StringConstant "}" (Character 1 1 () [])) ()) (= (Var 2 right_brace_unicode) (FunctionCall 2 ord () [((Var 2 s))] (Integer 4 []) () ()) ()) (Assert (Compare (FunctionCall 2 ord () [((StringConstant "}" (Character 1 1 () [])))] (Integer 4 []) (IntegerConstant 125 (Integer 4 [])) ()) Eq (IntegerConstant 125 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 [])) ()) ()) (Assert (Compare (Var 2 right_brace_unicode) Eq (IntegerConstant 125 (Integer 4 [])) (Logical 4 []) () ()) ())] Source Public Implementation () .false. .false.)}) [])
