#include <inttypes.h>

#include <stdlib.h>
#include <stdbool.h>
#include <stdio.h>
#include <string.h>
#include <lfortran_intrinsics.h>

int32_t test_factorial_1(int32_t x);
int32_t test_factorial_2(int32_t x);
int64_t test_factorial_3(int32_t x);
void main0();
void __main__global_stmts();



// Implementations
int32_t test_factorial_1(int32_t x)
{
    int32_t _lpython_return_variable;
    int32_t result;
    if (x < 0) {
        _lpython_return_variable = 0;
        return _lpython_return_variable;
    }
    result = 1;
    while (x > 0) {
        result = result*x;
        x = x - 1;
    }
    _lpython_return_variable = result;
    return _lpython_return_variable;
}

int32_t test_factorial_2(int32_t x)
{
    int32_t _lpython_return_variable;
    int32_t i;
    int32_t result;
    result = 1;
    for (i=1; i<=x + 1 - 1; i++) {
        result = result*i;
    }
    _lpython_return_variable = result;
    return _lpython_return_variable;
}

int64_t test_factorial_3(int32_t x)
{
    int64_t _lpython_return_variable;
    int64_t result;
    result = 0;
    if (x < 0) {
        _lpython_return_variable = result;
        return _lpython_return_variable;
    }
    result = 1;
    while (x > 0) {
        result = result*x;
        x = x - 1;
    }
    _lpython_return_variable = result;
    return _lpython_return_variable;
}

void main0()
{
    int32_t i;
    int64_t j;
    i = test_factorial_1(4);
    i = test_factorial_2(4);
    j = test_factorial_3(5);
}

void __main__global_stmts()
{
    main0();
}

int main(int argc, char* argv[])
{
    _lpython_set_argv(argc, argv);
    __main__global_stmts();
    return 0;
}
